Current State:
	Bluetooth scanning service works. We can scan for hosts and update a 
	file in /tmp with status. 
        Bluetooth modules are cloned so they all have the same MAC.  All
        pairing information is copied between nodes (manually so far).

	Small web service to host /tmp file to master web server

	Master web service that will generate the where-are-you pages exists
        (looks damn good too)

ToDo:
    Figure out if wireless (802.11) is a good method to scan too
    XMPP bot
    IRC bot
    Make services for auto starting
    Make scripts to ease cloning of bluetooth dongles
    Make scripts to ease moving of pairing info

--------------
Design goals:

Highly Modular design.
	Intermodular dependancy will be low.  Everything can be standalone
		Not that it will always make sense, why host status info
		if you aren't scanning for fresh data?
	Currently planned modules:
		Bluetooth scanner (done, requires pairing for optimal performance)
		Status daemon (done)
		Master web page for in/out display (done)
		Management Interface

Multiple screens in communication with each other. (done)
	instead of "in" or "out" it can specify location
		"Emilio is IN Research Computing"
		"Paul is OUT"

Ease method of pairing devices.  
	Perhaps even sniffing wireless and just looking for a mac address

Simple management interface
	Web pages are pretty.  Lets manage from that.  

Portability
	No Raspberry?  Who cares. "Linux" would be the main requirment

Secure(ish)
	Make it hard to man-in-the-middle or inject messages.
	Make it easy to opt-out/in

License
-------

GPLv2+
